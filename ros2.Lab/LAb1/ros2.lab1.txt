<<<<<<< HEAD
..........................................publisher.................................
=======
........................................publisher.......................................
>>>>>>> 63141fa0ad9a99e6decc9c332e1542bd882ee665
#!/usr/bin/env python3

import rclpy 
from rclpy.node import Node
from example_interfaces.msg import String

class my_node(Node):
    def __init__(self):
        self.counter=0
        self.flag=0
        super().__init__("Node_name")

        self.create_timer(1/1 ,self.timer_call)
        self.obj_pub=self.create_publisher(String,"my_topic",10)
        self.create_subscription(String,"my_reset",self.timer_call_sub,10)

        self.get_logger().info("Node is started")

    def timer_call(self):
        self.get_logger().info("HELOO")
        self.counter+=1
        msg=String()
        if(self.counter <=6 ):
            msg.data="My_name is khaled " + str(self.counter-1)
            self.obj_pub.publish(msg)  
        else:
            self.counter=0

    def timer_call_sub(self,msg):
        self.get_logger().info(msg.data) 

def main (args=None):
    rclpy.init(args=args)
    node=my_node()
    rclpy.spin(node )

    rclpy.shutdown()


if __name__=="__main__":
<<<<<<< HEAD
    main()            
    
    
   ..............................................sub..................................
   
   #!/usr/bin/env python3
=======
    main()    
    
    
    .............................................sub.................................
    
    #!/usr/bin/env python3
>>>>>>> 63141fa0ad9a99e6decc9c332e1542bd882ee665

import rclpy 
from rclpy.node import Node
from example_interfaces.msg import String

class my_node(Node):
    def __init__(self):
        super().__init__("numebr_counter")
        self.counter=0

        self.create_subscription(String,"my_topic",self.timer_call,10)
        self.get_logger().info("subscriber is started")

        self.create_timer(1/1 ,self.timer_call_pub)

        self.obj_pub=self.create_publisher(String,"my_reset",10)

        self.create_publisher(String,"my_number",10)



    def timer_call(self,msg):
        self.get_logger().info(msg.data)  

    def timer_call_pub(self):
        self.counter+=1
        msg=String()
        if(self.counter <=6 ):
            msg.data=str(self.counter-1)
            self.obj_pub.publish(msg)  
        else:
            self.counter=0
        

def main (args=None):
    rclpy.init(args=args)
    node=my_node()
    rclpy.spin(node )

    rclpy.shutdown()


if __name__=="__main__":
    main()            

<<<<<<< HEAD

=======
        
>>>>>>> 63141fa0ad9a99e6decc9c332e1542bd882ee665
    
